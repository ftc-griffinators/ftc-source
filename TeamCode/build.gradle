plugins {
    id "com.diffplug.spotless" version "6.22.0"
}

apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'

android {
    namespace = 'org.firstinspires.ftc.teamcode'

    packagingOptions {
        jniLibs.useLegacyPackaging true
    }
}

repositories {
    maven {
        url = 'https://maven.brott.dev/'
    }
}

dependencies {
    implementation project(':FtcRobotController')
    annotationProcessor files('lib/OpModeAnnotationProcessor.jar')

    implementation "com.acmerobotics.roadrunner:ftc:0.1.13"
    implementation "com.acmerobotics.roadrunner:core:1.0.0-beta7"
    implementation "com.acmerobotics.roadrunner:actions:1.0.0-beta7"
    implementation "com.acmerobotics.dashboard:dashboard:0.4.14"
}

// Code style configuration
spotless {
    java {
        target 'src/main/java/**/*.java'

        // Google Java Style Guide for Android
        googleJavaFormat('1.17.0').aosp()

        // Remove unused imports
        removeUnusedImports()

        // Import ordering
        importOrder(
                'android',
                'com.acmerobotics',
                'com.qualcomm',
                'org.firstinspires',
                'java',
                'javax',
                'org',
                'com',
                ''
        )

        // Custom rules for FTC
        custom 'no trailing whitespace', { it.replaceAll('[\\s]+$', '') }

        // Don't format generated files
        targetExclude 'src/main/java/org/firstinspires/ftc/teamcode/generated/**'

        // Format comments
        formatAnnotations()
    }

    kotlin {
        // In case you add Kotlin files later
        target 'src/main/java/**/*.kt'
        ktfmt().googleStyle()
    }

    format 'misc', {
        target '*.gradle', '*.md', '.gitignore'
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
}

// Add task to verify style during build
tasks.named('check').configure {
    dependsOn 'spotlessCheck'
}

// Add task to apply style fixes
tasks.register('formatCode') {
    dependsOn 'spotlessApply'
    group = 'formatting'
    description = 'Format source code to comply with team style guide'
}
