name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Build
        run: ./gradlew build

      # Check if OpModes are properly annotated
      - name: Verify OpMode Annotations
        run: |
          find TeamCode/src/main/java -type f -name "*.java" -exec grep -L "@TeleOp\|@Autonomous" {} \; | grep -v "package-info.java" > non_annotated.txt
          if [ -s non_annotated.txt ]; then
            echo "Warning: Found Java files without OpMode annotations:"
            cat non_annotated.txt
          fi

      # Static analysis
      - name: Run Lint
        run: ./gradlew lint

      # Check for common FTC issues
      - name: FTC Checks
        run: |
          # Check for hardcoded values in autonomous
          find TeamCode/src/main/java -type f -name "*Auto*.java" -exec grep -l "sleep(" {} \;
          
          # Check for motor initialization safety
          find TeamCode/src/main/java -type f -name "*.java" -exec grep -L "setZeroPowerBehavior" {} \; | grep "Motor"
          
          # Verify robot configurations
          if [ -f "TeamCode/src/main/res/xml/robot_config.xml" ]; then
            echo "Robot configuration found"
          else
            echo "Warning: No robot configuration file found"
          fi

      # Archive build artifacts
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: TeamCode-debug
          path: TeamCode/build/outputs/apk/debug/TeamCode-debug.apk

  analyze:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Setup Analysis Tools
        run: |
          mkdir -p analysis
          
          # Check TODOs
          find TeamCode/src/main/java -type f -name "*.java" -exec grep -l "TODO" {} \; > analysis/todos.txt
          
          # Find potential memory leaks
          find TeamCode/src/main/java -type f -name "*.java" -exec grep -l "new Thread" {} \; > analysis/threads.txt
          
          # Check initialization patterns
          find TeamCode/src/main/java -type f -name "*.java" -exec grep -l "hardwareMap" {} \; > analysis/hardware_init.txt

      - name: Upload Analysis Results
        uses: actions/upload-artifact@v3
        with:
          name: code-analysis
          path: analysis/

  report:
    runs-on: ubuntu-latest
    needs: [ build, analyze ]
    if: always()

    steps:
      - name: Generate Report
        run: |
          echo "## Build Report" >> report.md
          echo "### Build Status: ${{ needs.build.result }}" >> report.md
          echo "### Test Status: ${{ needs.test.result }}" >> report.md
          echo "### Analysis Status: ${{ needs.analyze.result }}" >> report.md

      - name: Upload Report
        uses: actions/upload-artifact@v3
        with:
          name: build-report
          path: report.md
